#!/usr/bin/env python

import sys
import json
from warnings import warn

from web3 import Web3, HTTPProvider

LOCAL_NODE = 'http://localhost:8545'


def parse_signature(signature):
    R = "0x" + signature[:64]
    S = "0x" + signature[64:128]
    V_tmp = signature[128:]
    if (V_tmp == "1b"):
        V = 0
    elif (V_tmp == "1c"):
        V = 1
    else:
        V = "crap"
    return [V, R, S]


def main(contract_address, destination_address, amount, sig_1, sig_2):
    contract_json = json.load(open('./build/contracts/Multisig2of3.json'))
    w3 = Web3(HTTPProvider(LOCAL_NODE, request_kwargs={'timeout': 60}))
    contract = w3.eth.contract(address = contract_address, abi=contract_json['abi'])

    # slice up sigs
    parsed_sig_1 = parse_signature(sig_1)
    parsed_sig_2 = parse_signature(sig_2)
    wei = Web3.toWei(amount, 'ether')

    warn("Authorize Transaction Spending Output, probably in a browser window")
    tx_hash = contract.transact({'from': w3.eth.accounts[0], 'gas': 1100000}).spend(destination_address, wei, parsed_sig_1[0], Web3.toBytes(hexstr=parsed_sig_1[1]), Web3.toBytes(hexstr=parsed_sig_1[2]), parsed_sig_2[0], Web3.toBytes(hexstr=parsed_sig_2[1]), Web3.toBytes(hexstr=parsed_sig_2[2]))

    print(tx_hash)
    

if __name__ == '__main__':
    if (len(sys.argv) < 4):
        sys.exit("USAGE: spend_ethereum_multisig CONTRACT_ADDRESS DESTINATION_ADDRESS AMOUNT(ETH) SIGNATURE_1 SIGNATURE_2")
    main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
